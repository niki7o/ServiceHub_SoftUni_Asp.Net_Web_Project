﻿@{
    ViewData["Title"] = "Конвертор на Текст (Главни/Малки букви)";
}

<h2 class="text-center my-4">Конвертор на Текст (Главни/Малки букви)</h2>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="inputText">Въведете текст:</label>
                <textarea class="form-control" id="inputText" rows="10" placeholder="Въведете вашия текст тук..."></textarea>
            </div>
            <div class="form-group mt-3">
                <label for="caseTypeSelect">Изберете тип конверсия:</label>
                <select class="form-control" id="caseTypeSelect">
                    <option value="uppercase">ГЛАВНИ БУКВИ</option>
                    <option value="lowercase">малки букви</option>
                    <option value="titlecase">Заглавни Букви</option>
                </select>
            </div>
            <button id="convertButton" class="btn btn-primary mt-3">Конвертирай</button>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="outputResult">Резултат:</label>
                <textarea class="form-control" id="outputResult" rows="10" readonly style="background-color: #e9ecef;"></textarea>
            </div>
            <div id="conversionMessage" class="mt-2 text-info" style="display:none;"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('convertButton').addEventListener('click', async () => {
            const inputText = document.getElementById('inputText').value;
            const caseType = document.getElementById('caseTypeSelect').value;
            const outputResult = document.getElementById('outputResult');
            const conversionMessage = document.getElementById('conversionMessage');

            outputResult.value = '';
            conversionMessage.style.display = 'none';
            conversionMessage.textContent = '';

            if (!inputText.trim()) {
                conversionMessage.textContent = 'Моля, въведете текст.';
                conversionMessage.className = 'mt-2 text-danger';
                conversionMessage.style.display = 'block';
                return;
            }

            try {
                const response = await fetch('/api/TextCaseConverter/convert', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ text: inputText, caseType: caseType })
                });

                if (response.ok) {
                    const result = await response.json();
                    outputResult.value = result.convertedText;
                    if (result.message) {
                        conversionMessage.textContent = result.message;
                        conversionMessage.className = 'mt-2 text-success';
                        conversionMessage.style.display = 'block';
                    }
                } else {
                    let errorMessage = `Грешка: ${response.status} ${response.statusText}`;
                    try {
                        const errorData = await response.json();
                        errorMessage = errorData.errors ? Object.values(errorData.errors).flat().join('; ') : (errorData.message || errorData.title || errorMessage);
                    } catch (jsonError) {
                        errorMessage = `Грешка: ${response.status} ${response.statusText}. Невалиден отговор от сървъра.`;
                        console.error('Failed to parse error response as JSON:', jsonError);
                    }
                    outputResult.value = '';
                    conversionMessage.textContent = errorMessage;
                    conversionMessage.className = 'mt-2 text-danger';
                    conversionMessage.style.display = 'block';
                }
            } catch (error) {
                console.error('Fetch error:', error);
                outputResult.value = '';
                conversionMessage.textContent = `Възникна мрежова грешка: ${error.message}.`;
                conversionMessage.className = 'mt-2 text-danger';
                conversionMessage.style.display = 'block';
            }
        });
    </script>
}