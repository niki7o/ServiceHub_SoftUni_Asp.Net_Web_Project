@model ServiceHub.Core.Models.Service.ServiceViewModel
@using ServiceHub.Common.Enum
@using ServiceHub.Data.Models // For Review entity properties like UserId in conditional checks
@using System.Security.Claims // For User.FindFirstValue

@{
    ViewData["Title"] = "Service Details";
    bool canUseService = ViewBag.CanUseService ?? false;
   
    string? currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    bool isAdmin = User.IsInRole("Admin"); 
}

<h1>Service Details</h1>

@if (TempData["ServiceMessage"] != null)
{
    <div class="alert alert-info" role="alert">
        @TempData["ServiceMessage"]
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div>
    <h4>@Model.Title</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            Title
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-3">
            Description
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-3">
            Is Business Only
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.IsBusinessOnly)
        </dd>
        <dt class="col-sm-3">
            Access Type
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.AccessType)
        </dd>
        <dt class="col-sm-3">
            Category
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.CategoryName)
        </dd>
        <dt class="col-sm-3">
            Average Rating
        </dt>
        <dd class="col-sm-9">
            @Model.AverageRating.ToString("F1") / 5 (@Model.ReviewCount reviews)
        </dd>
    </dl>

    <h5>Reviews (@Model.ReviewCount)</h5>
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        <ul class="list-group mb-3">
            @foreach (var review in Model.Reviews)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        Rating: @review.Rating / 5 <br />
                        Comment: @review.Comment <br />
                        Reviewed by: @review.UserName (@review.CreatedOn.ToShortDateString())
                    </div>
                    @if (User.Identity.IsAuthenticated)
                    {
                    
                        @if (review.UserName == User.Identity.Name || isAdmin)
                        {
                            <div class="btn-group" role="group">
                              
                                @if (review.UserName == User.Identity.Name)
                                {
                                    <a asp-controller="Review" asp-action="EditReview" asp-route-reviewId="@review.Id" class="btn btn-warning btn-sm me-1">Edit</a>
                                }
                                
                                <form asp-controller="Review" asp-action="DeleteReview" asp-route-reviewId="@review.Id" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this review?');">Delete</button>
                                </form>
                            </div>
                        }
                    }
                </li>
            }
        </ul>
    }
    else
    {
        <p>No reviews yet.</p>
    }
</div>

<div class="mt-4">
    @if (User.Identity.IsAuthenticated)
    {
        @if (canUseService)
        {
            <a asp-action="UseService" asp-route-id="@Model.Id" class="btn btn-success me-2">Use Service</a>
        }
        else
        {
            <button type="button" class="btn btn-warning me-2" disabled>Upgrade to Use</button>
            <a asp-controller="Subscription" asp-action="Upgrade" class="btn btn-info">Upgrade Plan</a>
        }

        <form asp-controller="Favorite" asp-action="ToggleFavorite" asp-route-serviceId="@Model.Id" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            @if (Model.IsFavorite)
            {
                <button type="submit" class="btn btn-danger me-2">
                    <i class="fas fa-heart"></i> Remove from Favorites
                </button>
            }
            else
            {
                <button type="submit" class="btn btn-outline-primary me-2">
                    <i class="far fa-heart"></i> Add to Favorites
                </button>
            }
        </form>
    }
    else
    {
        <p class="text-info">Please log in or register to use or favorite this service.</p>
        <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-primary me-2">Register</a>
        <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-outline-primary">Log In</a>
    }

    <a asp-action="All" class="btn btn-secondary ms-2">Back to List</a>

    @if (User.Identity.IsAuthenticated)
    {
        <h5 class="mt-4">
            <a asp-controller="Review" asp-action="CreateReview" asp-route-serviceId="@Model.Id" class="btn btn-primary btn-sm">Leave a Review</a>
        </h5>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}