@model ServiceHub.Core.Models.Service.ServiceViewModel
@using System.Security.Claims

@{
    ViewData["Title"] = Model.Title;
    var isAdmin = User.Identity.IsAuthenticated && User.IsInRole("Admin");
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);


    var currentReviewPage = Model.CurrentReviewPage;
    var totalReviewPages = Model.TotalReviewPages;
    var serviceId = Model.Id;
}


<link rel="stylesheet" href="~/css/details.css" asp-append-version="true" />

<style>

  
</style>

<div class="details-container">
    <h2 class="service-title">@Model.Title</h2>
    <p class="service-category">Категория: @(Model.CategoryName ?? "Неизвестна")</p>
    @if (!string.IsNullOrEmpty(Model.CreatedByUserName))
    {
        <p class="service-creator">Създадена от: <span class="@Model.CreatedByUserRoleCssClass">@Model.CreatedByUserName</span></p> 
    }

    <div class="description-section">
        <h4>Описание на услугата:</h4>
        <p>@Model.Description</p>
    </div>

    <div class="stats-grid">
        <div class="stat-item">
            <i class="fas fa-eye"></i>
            <p>Преглеждания:</p>
            <p class="value">@Model.ViewsCount</p>
        </div>
        <div class="stat-item">
            <i class="fas fa-star"></i>
            <p>Среден рейтинг:</p>
            <p class="value">@Model.AverageRating.ToString("F1")</p>
        </div>
        <div class="stat-item">
            <i class="fas fa-comments"></i>
            <p>Ревюта:</p>
            <p class="value">@Model.ReviewCount</p>
        </div>
        <div class="stat-item">
            <i class="fas fa-lock-open"></i>
            <p>Тип достъп:</p>
            <p class="value">@Model.AccessType.ToString()</p>
        </div>
    </div>

   
    @if (Model.IsTemplate && !Model.IsApproved)
    {
        <div class="alert alert-warning text-center under-development-message" role="alert">
            <i class="fas fa-exclamation-triangle"></i> Тази услуга е създадена от шаблон и е още в разработка.
        </div>
    }

    <div class="action-buttons-container">
     
        @if (User.Identity.IsAuthenticated && !Model.IsTemplate && Model.IsApproved && !(currentUserId == Model.CreatedByUserId && User.IsInRole("BusinessUser")))
        {
            <a asp-action="UseService" asp-route-id="@Model.Id" class="btn btn-action btn-use-service">
                <i class="fas fa-play-circle"></i> Използвай услугата
            </a>
        }

        @if (User.Identity.IsAuthenticated)
        {
            <form asp-action="ToggleFavorite" asp-route-serviceId="@Model.Id" method="post" class="d-inline">
                <button type="submit" class="btn btn-action btn-favorite @(Model.IsFavorite ? "active" : "")">
                    <i class="fas fa-star"></i> Любими
                </button>
            </form>
        }

        @if (isAdmin)
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-action btn-edit">
                <i class="fas fa-edit"></i> Редактирай
            </a>
            <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline" onsubmit="return confirm('Сигурни ли сте, че искате да изтриете тази услуга?');">
                <button type="submit" class="btn btn-action btn-delete">
                    <i class="fas fa-trash-alt"></i> Изтрий
                </button>
            </form>
        }
    </div>

    <div class="reviews-section">
        <h3>Ревюта (@Model.ReviewCount)</h3>
        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            @foreach (var review in Model.Reviews)
            {
                <div class="review-item">
                    <div class="review-header">
                        <span class="review-user @review.UserRoleCssClass">@review.UserName</span> 
                        <span class="review-rating">
                            @for (int i = 0; i < review.Rating; i++)
                            {
                                <i class="fas fa-star"></i>
                            }
                        </span>
                    </div>
                    <p class="review-comment">@review.Comment</p>
                    <small class="text-muted">@review.CreatedOn.ToShortDateString()</small>

                    <div class="review-actions">

                        @if (User.Identity.IsAuthenticated && review.IsAuthor)
                        {
                            <a asp-controller="Review" asp-action="EditReview" asp-route-reviewId="@review.Id" asp-route-serviceId="@Model.Id" asp-route-reviewPage="@Model.CurrentReviewPage" class="edit-review-btn">
                                <i class="fas fa-pencil-alt"></i>
                            </a>
                        }

                        @if (User.Identity.IsAuthenticated && (isAdmin || review.IsAuthor))
                        {
                            <form asp-controller="Review" asp-action="DeleteReview" asp-route-reviewId="@review.Id" asp-route-reviewPage="@Model.CurrentReviewPage" method="post" class="d-inline">
                                <button type="submit" class="delete-review-btn" onclick="return confirm('Сигурни ли сте, че искате да изтриете това ревю?');">
                                    <i class="fas fa-times"></i>
                                </button>
                            </form>
                        }
                    </div>
                </div>
            }


            @if (Model.TotalReviewPages > 1)
            {
                <div class="review-pagination-container">
                    <a asp-action="Details" asp-route-id="@serviceId" asp-route-reviewPage="@(Model.CurrentReviewPage - 1)"
                       class="btn review-pagination-btn @(Model.CurrentReviewPage == 1 ? "disabled" : "")">
                        Предишна
                    </a>

                    @for (int i = 1; i <= Model.TotalReviewPages; i++)
                    {
                        <a asp-action="Details" asp-route-id="@serviceId" asp-route-reviewPage="@i"
                           class="btn review-pagination-page-number @(i == Model.CurrentReviewPage ? "active" : "")">
                            @i
                        </a>
                    }

                    <a asp-action="Details" asp-route-id="@serviceId" asp-route-reviewPage="@(Model.CurrentReviewPage + 1)"
                       class="btn review-pagination-btn @(Model.CurrentReviewPage == Model.TotalReviewPages ? "disabled" : "")">
                        Следваща
                    </a>
                </div>
            }
        }
        else
        {
            <p class="text-center text-muted">Все още няма ревюта за тази услуга.</p>
        }
    </div>


    @if (User.Identity.IsAuthenticated && !Model.IsTemplate && Model.IsApproved)
    {
        <div class="write-review-btn-container">
            <a asp-controller="Review" asp-action="CreateReview" asp-route-serviceId="@Model.Id" asp-route-reviewPage="@Model.CurrentReviewPage" class="btn btn-write-review">
                <i class="fas fa-plus-circle"></i> Напиши ревю
            </a>
        </div>
    }
    else if (User.Identity.IsAuthenticated && (Model.IsTemplate || !Model.IsApproved))
    {
        <div class="alert alert-info text-center mt-4" role="alert">
            Не можете да пишете ревюта за шаблони или неодобрени услуги.
        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-4" role="alert">
            Моля, <a asp-area="Identity" asp-page="/Account/Login">влезте в профила си</a>, за да напишете ревю.
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            document.querySelectorAll('.review-pagination-btn.disabled').forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                });
            });
        });
    </script>
}
