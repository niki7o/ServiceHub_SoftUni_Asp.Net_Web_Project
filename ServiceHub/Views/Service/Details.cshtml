@model ServiceHub.Core.Models.Service.ServiceViewModel
@using System.Security.Claims

@{
    ViewData["Title"] = Model.Title;
    var isAdmin = User.Identity.IsAuthenticated && User.IsInRole("Admin");
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);

    // Променливи за пагинация на ревюта
    var currentReviewPage = Model.CurrentReviewPage;
    var totalReviewPages = Model.TotalReviewPages;
    var serviceId = Model.Id; // За по-лесен достъп
}

<style>
    body {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(135deg, #a8dadc 0%, #457b9d 100%);
        color: #333;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
    }

    .details-container {
        padding: 40px 20px;
        max-width: 900px;
        margin: 40px auto;
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        color: #333;
    }

    .service-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #1d3557;
        margin-bottom: 15px;
        text-align: center;
    }

    .service-category {
        font-size: 1.1rem;
        color: #457b9d;
        text-align: center;
        margin-bottom: 25px;
    }

    .description-section {
        background-color: #f8f9fa;
        border-left: 5px solid #457b9d;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

        .description-section h4 {
            color: #1d3557;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .description-section p {
            font-size: 1rem;
            line-height: 1.7;
            color: #555;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-item {
        background-color: #e0f2f7;
        padding: 15px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        border: 1px solid #a8dadc;
    }

        .stat-item i {
            font-size: 1.5rem;
            color: #1d3557;
            margin-bottom: 8px;
        }

        .stat-item p {
            margin: 0;
            font-size: 0.9rem;
            color: #457b9d;
            font-weight: 500;
        }

        .stat-item .value {
            font-size: 1.2rem;
            font-weight: 700;
            color: #2a9d8f;
        }

    .reviews-section {
        margin-top: 40px;
        border-top: 1px solid #eee;
        padding-top: 30px;
    }

        .reviews-section h3 {
            color: #1d3557;
            font-weight: 600;
            margin-bottom: 25px;
            text-align: center;
        }

    .review-item {
        background-color: #f1faee;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        border: 1px solid #a8dadc;
        position: relative;
        padding-bottom: 50px;
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .review-user {
        font-weight: 600;
        color: #1d3557;
    }

    .review-rating {
        color: gold;
    }

    .review-comment {
        font-size: 0.95rem;
        color: #555;
        line-height: 1.6;
        margin-bottom: 15px;
    }

    .action-buttons-container {
        display: flex;
        justify-content: center;
        gap: 15px;
        margin-top: 30px;
        margin-bottom: 30px;
    }

    .btn-action {
        padding: 12px 25px;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .btn-details {
        background-color: #1d3557;
        color: white;
    }

        .btn-details:hover {
            background-color: #142840;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(29, 53, 87, 0.4);
        }

    .btn-favorite {
        background-color: #f1faee;
        border: 1px solid #a8dadc;
        color: #1d3557;
    }

        .btn-favorite:hover {
            background-color: #e0e0e0;
            color: #1d3557;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

        .btn-favorite.active {
            background-color: #e67e22;
            border-color: #e67e22;
            color: white;
        }

            .btn-favorite.active:hover {
                background-color: #d66a1a;
                color: white;
            }

    .btn-edit {
        background-color: #28a745;
        color: white;
    }

        .btn-edit:hover {
            background-color: #218838;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(40, 167, 69, 0.4);
        }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background-color: #c82333;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(220, 53, 69, 0.4);
        }

    .btn-use-service {
        background-color: #007bff;
        color: white;
    }

        .btn-use-service:hover {
            background-color: #0056b3;
            color: white;
        }

    .delete-review-btn, .edit-review-btn {
        border: none;
        border-radius: 5px;
        padding: 5px 10px;
        font-size: 0.8rem;
        cursor: pointer;
        transition: background-color 0.2s ease;
        position: absolute;
        bottom: 10px;
        z-index: 1;
    }

    .delete-review-btn {
        background-color: #dc3545;
        color: white;
        right: 10px;
    }

        .delete-review-btn:hover {
            background-color: #c82333;
        }

    .edit-review-btn {
        background-color: #ffc107;
        color: #333;
        right: 70px;
    }

        .edit-review-btn:hover {
            background-color: #e0a800;
        }

    .review-actions {
        position: absolute;
        bottom: 10px;
        right: 10px;
        display: flex;
        gap: 5px;
    }

    .write-review-btn-container {
        text-align: center;
        margin-top: 30px;
        margin-bottom: 30px;
    }

    .btn-write-review {
        background-color: #2a9d8f;
        color: white;
        padding: 12px 25px;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        border: none;
        transition: background-color 0.3s ease, transform 0.2s ease;
        box-shadow: 0 4px 12px rgba(42, 157, 143, 0.3);
        cursor: pointer;
    }

        .btn-write-review:hover {
            background-color: #218276;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(42, 157, 143, 0.4);
        }

    /* Стилове за пагинация на ревюта */
    .review-pagination-container {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
    }

    .review-pagination-btn {
        background-color: #1d3557;
        border: none;
        color: white;
        padding: 8px 15px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 500;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px rgba(29, 53, 87, 0.2);
        text-decoration: none; /* За да изглежда като бутон, но да е линк */
    }

        .review-pagination-btn:hover:not(:disabled) {
            background-color: #142840;
            transform: translateY(-1px);
            box-shadow: 0 4px 10px rgba(29, 53, 87, 0.3);
            color: white; /* Запазва цвета на текста при ховър */
        }

        .review-pagination-btn:disabled {
            background-color: rgba(255, 255, 255, 0.2);
            color: rgba(255, 255, 255, 0.7);
            cursor: not-allowed;
            opacity: 0.6;
            box-shadow: none;
            pointer-events: none; /* Добавено: Предотвратява кликване на деактивирани линкове */
        }

    .review-pagination-page-number {
        background-color: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.4);
        color: #1d3557; /* Цвят на текста за активна страница */
        padding: 8px 14px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 500;
        transition: all 0.2s ease;
        text-decoration: none;
    }

        .review-pagination-page-number:hover {
            background-color: rgba(255, 255, 255, 0.3);
            color: #1d3557; /* Запазва цвета на текста при ховър */
        }

        .review-pagination-page-number.active {
            background-color: #1d3557;
            border-color: #1d3557;
            color: white;
            box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);
        }
</style>

<div class="details-container">
    <h2 class="service-title">@Model.Title</h2>
    <p class="service-category">Категория: @(Model.CategoryName ?? "Неизвестна")</p>

    <div class="description-section">
        <h4>Описание на услугата:</h4>
        <p>@Model.Description</p>
    </div>

    <div class="stats-grid">
        <div class="stat-item">
            <i class="fas fa-eye"></i>
            <p>Преглеждания:</p>
            <p class="value">@Model.ViewsCount</p>
        </div>
        <div class="stat-item">
            <i class="fas fa-star"></i>
            <p>Среден рейтинг:</p>
            <p class="value">@Model.AverageRating.ToString("F1")</p>
        </div>
        <div class="stat-item">
            <i class="fas fa-comments"></i>
            <p>Ревюта:</p>
            <p class="value">@Model.ReviewCount</p>
        </div>
        <div class="stat-item">
            <i class="fas fa-lock-open"></i>
            <p>Тип достъп:</p>
            <p class="value">@Model.AccessType.ToString()</p>
        </div>
    </div>

    @if (Model.IsTemplate && !Model.IsApproved)
    {
        <div class="alert alert-warning text-center" role="alert">
            <i class="fas fa-exclamation-triangle"></i> Тази услуга е шаблон и все още не е одобрена.
            @if (!string.IsNullOrEmpty(Model.CreatedByUserName))
            {
                <span>Създадена от: @Model.CreatedByUserName</span>
            }
        </div>
    }

    <div class="action-buttons-container">
        @if (User.Identity.IsAuthenticated && !Model.IsTemplate && Model.IsApproved)
        {
            <a asp-action="UseService" asp-route-id="@Model.Id" class="btn btn-action btn-use-service">
                <i class="fas fa-play-circle"></i> Използвай услугата
            </a>
        }

        @if (User.Identity.IsAuthenticated)
        {
            <form asp-action="ToggleFavorite" asp-route-serviceId="@Model.Id" method="post" class="d-inline">
                <button type="submit" class="btn btn-action btn-favorite @(Model.IsFavorite ? "active" : "")">
                    <i class="fas fa-star"></i> Любими
                </button>
            </form>
        }

        @if (isAdmin)
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-action btn-edit">
                <i class="fas fa-edit"></i> Редактирай
            </a>
            <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline" onsubmit="return confirm('Сигурни ли сте, че искате да изтриете тази услуга?');">
                <button type="submit" class="btn btn-action btn-delete">
                    <i class="fas fa-trash-alt"></i> Изтрий
                </button>
            </form>
        }
    </div>

    <div class="reviews-section">
        <h3>Ревюта (@Model.ReviewCount)</h3>
        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            @foreach (var review in Model.Reviews)
            {
                <div class="review-item">
                    <div class="review-header">
                        <span class="review-user">@review.UserName</span>
                        <span class="review-rating">
                            @for (int i = 0; i < review.Rating; i++)
                            {
                                <i class="fas fa-star"></i>
                            }
                        </span>
                    </div>
                    <p class="review-comment">@review.Comment</p>
                    <small class="text-muted">@review.CreatedOn.ToShortDateString()</small>

                    <div class="review-actions">
                        @* Бутон за редактиране на ревю - видим за автора на ревюто *@
                        @if (User.Identity.IsAuthenticated && review.IsAuthor)
                        {
                            <a asp-controller="Review" asp-action="EditReview" asp-route-reviewId="@review.Id" asp-route-serviceId="@Model.Id" asp-route-reviewPage="@currentReviewPage" class="edit-review-btn">
                                <i class="fas fa-pencil-alt"></i>
                            </a>
                        }
                        @* Бутон за изтриване на ревю - видим за администратори ИЛИ за автора на ревюто *@
                        @if (User.Identity.IsAuthenticated && (isAdmin || review.IsAuthor))
                        {
                            <form asp-controller="Review" asp-action="DeleteReview" asp-route-reviewId="@review.Id" asp-route-reviewPage="@currentReviewPage" method="post" class="d-inline">
                                <button type="submit" class="delete-review-btn" onclick="return confirm('Сигурни ли сте, че искате да изтриете това ревю?');">
                                    <i class="fas fa-times"></i>
                                </button>
                            </form>
                        }
                    </div>
                </div>
            }

            @* Пагинация за ревюта *@
            @if (totalReviewPages > 1)
            {
                <div class="review-pagination-container">
                    <a asp-action="Details" asp-route-id="@serviceId" asp-route-reviewPage="@(currentReviewPage - 1)"
                       class="btn review-pagination-btn @(currentReviewPage == 1 ? "disabled" : "")">
                        Предишна
                    </a>

                    @for (int i = 1; i <= totalReviewPages; i++)
                    {
                        <a asp-action="Details" asp-route-id="@serviceId" asp-route-reviewPage="@i"
                           class="btn review-pagination-page-number @(i == currentReviewPage ? "active" : "")">
                            @i
                        </a>
                    }

                    <a asp-action="Details" asp-route-id="@serviceId" asp-route-reviewPage="@(currentReviewPage + 1)"
                       class="btn review-pagination-btn @(currentReviewPage == totalReviewPages ? "disabled" : "")">
                        Следваща
                    </a>
                </div>
            }
        }
        else
        {
            <p class="text-center text-muted">Все още няма ревюта за тази услуга.</p>
        }
    </div>

    @* Бутон за писане на ревю - води към отделна страница *@
    @if (User.Identity.IsAuthenticated && !Model.IsTemplate && Model.IsApproved)
    {
        <div class="write-review-btn-container">
            <a asp-controller="Review" asp-action="CreateReview" asp-route-serviceId="@Model.Id" asp-route-reviewPage="@currentReviewPage" class="btn btn-write-review">
                <i class="fas fa-plus-circle"></i> Напиши ревю
            </a>
        </div>
    }
    else if (User.Identity.IsAuthenticated && (Model.IsTemplate || !Model.IsApproved))
    {
        <div class="alert alert-info text-center mt-4" role="alert">
            Не можете да пишете ревюта за шаблони или неодобрени услуги.
        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-4" role="alert">
            Моля, <a asp-area="Identity" asp-page="/Account/Login">влезте в профила си</a>, за да напишете ревю.
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Предотвратява кликване на деактивирани бутони за пагинация
            document.querySelectorAll('.review-pagination-btn.disabled').forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                });
            });
        });
    </script>
}
