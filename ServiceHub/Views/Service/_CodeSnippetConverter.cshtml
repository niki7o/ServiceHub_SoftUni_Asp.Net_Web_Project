@model ServiceHub.Core.Models.Tools.CodeSnippetConvertRequestModel
@{
    ViewData["Title"] = "Конвертор на Кодови Снипети";
    var supportedLanguages = ViewBag.SupportedLanguages as List<string> ?? new List<string> { "C#", "Python", "JavaScript", "PHP" };
    var isBusinessUser = ViewBag.IsBusinessUser ?? false;
    var lockedLanguages = new HashSet<string> { "JavaScript", "PHP" }; 
    var subscriptionPageUrl = "/Home/Plans";
}

<style>
   
    .form-control-lg.rounded-pill {
        border-radius: 50px;
        padding-left: 20px;
        padding-right: 20px;
    }

    .btn-lg.rounded-pill {
        border-radius: 50px;
        padding: 15px 30px;
        font-size: 1.25rem;
    }

    .card.shadow-lg.rounded-lg {
        border-radius: 15px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.15);
    }

    .card-body.p-4.p-md-5 {
        padding: 2.5rem !important;
    }

    .text-primary {
        color: #1d3557 !important; 
    }

    .text-secondary {
        color: #457b9d !important; 
    }

    .btn-primary {
        background-color: #1d3557;
        border-color: #1d3557;
    }

        .btn-primary:hover {
            background-color: #142840;
            border-color: #142840;
        }

   
    .alert-info {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-warning {
        background-color: #fff3cd;
        color: #856404;
    }

    
    select option:disabled {
        background-color: #f0f0f0;
        color: #a0a0a0;
        cursor: not-allowed;
    }

    .premium-feature-message {
        background-color: #fff3cd;
        border: 1px solid #ffeeba; 
        color: #856404;
        padding: 10px 15px;
        border-radius: 8px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        margin-top: 10px; 
    }

        .premium-feature-message .badge {
            font-size: 0.8em;
            padding: 0.4em 0.7em;
            border-radius: 5px;
            background-color: #e9c46a; 
            color: #1d3557; 
            font-weight: 700;
        }

        .premium-feature-message a {
            color: #007bff;
            text-decoration: underline;
            font-weight: bold;
            transition: color 0.2s ease;
        }

            .premium-feature-message a:hover {
                color: #0056b3;
            }

  
    .option-text-with-icon {
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .option-text-with-icon .lock-icon {
            color: #e76f51;
            font-size: 0.8em;
        }
</style>

<h2 class="text-center my-4 text-primary font-weight-bold">Конвертор на Кодови Снипети</h2>
<p class="text-center text-muted mb-4">Конвертирайте програмни кодове между различни езици бързо и лесно.</p>

<div class="container mt-4">
    <div class="card shadow-lg rounded-lg">
        <div class="card-body p-4 p-md-5">
            <div class="row">
                <div class="col-md-6 border-right pr-md-4">
                    <h3 class="h5 text-secondary mb-3">Въведете код за конвертиране</h3>
                    <div class="form-group mb-3">
                        <label for="sourceLanguage" class="form-label font-weight-bold">Изходен език:</label>
                        <select id="sourceLanguage" class="form-control form-control-lg rounded-pill">
                            <option value="">-- Изберете изходен език --</option>
                            
                        </select>
                        <div id="sourceLanguagePremiumMessage" class="premium-feature-message" style="display:none;">
                            <i class="fas fa-crown me-2 text-warning"></i> Тази функция е част от <span class="badge bg-warning text-dark">ПРЕМИУМ</span> абонамента. <a href="@subscriptionPageUrl" class="text-info font-weight-bold">Абонирайте се сега!</a>
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        <label for="targetLanguage" class="form-label font-weight-bold">Целеви език:</label>
                        <select id="targetLanguage" class="form-control form-control-lg rounded-pill">
                            <option value="">-- Изберете целеви език --</option>
                          
                        </select>
                        <div id="targetLanguagePremiumMessage" class="premium-feature-message" style="display:none;">
                            <i class="fas fa-crown me-2 text-warning"></i> Тази функция е част от <span class="badge bg-warning text-dark">ПРЕМИУМ</span> абонамента. <a href="@subscriptionPageUrl" class="text-info font-weight-bold">Абонирайте се сега!</a>
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <label for="sourceCode" class="form-label font-weight-bold">Изходен код:</label>
                        <textarea id="sourceCode" rows="12" class="form-control rounded-lg" placeholder="Въведете вашия код тук..."></textarea>
                    </div>

                    <div class="d-grid gap-2">
                        <button id="convertCodeButton" class="btn btn-primary btn-lg rounded-pill shadow-sm">
                            <i class="fas fa-sync-alt me-2"></i> Конвертирай Код
                        </button>
                    </div>
                </div>

                <div class="col-md-6 pl-md-4 mt-4 mt-md-0">
                    <h3 class="h5 text-secondary mb-3">Конвертиран код</h3>
                    <div class="form-group mb-4">
                        <textarea id="convertedCode" rows="18" class="form-control rounded-lg bg-light text-dark" readonly></textarea>
                    </div>
                    <div id="conversionMessage" class="mt-2 p-3 rounded" style="display:none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const isBusinessUser = @(isBusinessUser.ToString().ToLower());
        const supportedLanguages = @Html.Raw(Json.Serialize(supportedLanguages)); 
        const lockedLanguages = new Set(['JavaScript', 'PHP']);
        const subscriptionPageUrl = "@subscriptionPageUrl";

       
        function showConversionMessage(message, type) {
            const conversionMessage = document.getElementById('conversionMessage');
            conversionMessage.textContent = message;
            conversionMessage.className = `mt-2 p-3 rounded alert alert-${type}`;
            conversionMessage.style.display = 'block';
        }

        function handlePremiumMessage(selectElement, premiumMessageElement) {
            const selectedLanguage = selectElement.value;
            if (lockedLanguages.has(selectedLanguage) && !isBusinessUser) {
                premiumMessageElement.style.display = 'flex';
                showConversionMessage('Моля, надстройте акаунта си, за да използвате този език.', 'warning');
            } else {
                premiumMessageElement.style.display = 'none'; 
             
                if (document.getElementById('conversionMessage').style.display !== 'block') {
                    showConversionMessage('', 'none');
                }
            }
        }

       
        function populateLanguageSelect(selectElement) {
          
            const defaultOption = document.createElement('option');
            defaultOption.value = "";
            defaultOption.textContent = "-- Изберете език --";
            selectElement.appendChild(defaultOption);

            supportedLanguages.forEach(lang => {
                const option = document.createElement('option');
                option.value = lang;
                option.textContent = lang;

                const isLocked = lockedLanguages.has(lang);
                option.dataset.isLocked = isLocked.toString(); 

                if (isLocked && !isBusinessUser) {
                    option.disabled = true; 
                    option.textContent += ' (ПРЕМИУМ) \u{1F512}';
                }
                selectElement.appendChild(option);
            });
        }


        document.addEventListener('DOMContentLoaded', () => {
            const sourceLanguageSelect = document.getElementById('sourceLanguage');
            const targetLanguageSelect = document.getElementById('targetLanguage');
            const sourceLanguagePremiumMessage = document.getElementById('sourceLanguagePremiumMessage');
            const targetLanguagePremiumMessage = document.getElementById('targetLanguagePremiumMessage');

          
            populateLanguageSelect(sourceLanguageSelect);
            populateLanguageSelect(targetLanguageSelect);

          
            sourceLanguageSelect.addEventListener('change', () => {
                handlePremiumMessage(sourceLanguageSelect, sourceLanguagePremiumMessage);
            });
            targetLanguageSelect.addEventListener('change', () => {
                handlePremiumMessage(targetLanguageSelect, targetLanguagePremiumMessage);
            });

          
            handlePremiumMessage(sourceLanguageSelect, sourceLanguagePremiumMessage);
            handlePremiumMessage(targetLanguageSelect, targetLanguagePremiumMessage);
        });


        document.getElementById('convertCodeButton').addEventListener('click', async () => {
            const sourceCode = document.getElementById('sourceCode').value;
            const sourceLanguage = document.getElementById('sourceLanguage').value;
            const targetLanguage = document.getElementById('targetLanguage').value;
            const convertedCodeOutput = document.getElementById('convertedCode');

            convertedCodeOutput.value = '';
            showConversionMessage('', 'none');

          
            if (!sourceCode.trim()) {
                showConversionMessage('Моля, въведете изходен код.', 'danger');
                return;
            }
            if (!sourceLanguage) {
                showConversionMessage('Моля, изберете изходен език.', 'danger');
                return;
            }
            if (!targetLanguage) {
                showConversionMessage('Моля, изберете целеви език.', 'danger');
                return;
            }
            if (sourceLanguage === targetLanguage) {
                showConversionMessage('Изходният и целевият език не могат да бъдат еднакви. Върнат е оригиналният код.', 'warning');
                convertedCodeOutput.value = sourceCode;
                return;
            }

            // Клиентска валидация за заключени езици преди изпращане на заявката
            if (!isBusinessUser && (lockedLanguages.has(sourceLanguage) || lockedLanguages.has(targetLanguage))) {
                showConversionMessage('Достъпът до JavaScript и PHP конвертиране е само за Бизнес Потребители. Моля, надстройте акаунта си.', 'warning');
                return;
            }

            try {
                showConversionMessage('Конвертиране на кода... Моля, изчакайте.', 'info');
                document.getElementById('convertCodeButton').disabled = true;

                const response = await fetch('/api/CodeSnippetConverter/convert', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        sourceCode: sourceCode,
                        sourceLanguage: sourceLanguage,
                        targetLanguage: targetLanguage
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    convertedCodeOutput.value = result.convertedCode;
                    showConversionMessage(result.message || 'Конвертирането е успешно.', 'success');
                } else {
                    let errorMessage = `Грешка: ${response.status} ${response.statusText}`;
                    try {
                        const errorData = await response.json();
                        errorMessage = errorData.errors ? Object.values(errorData.errors).flat().join('; ') : (errorData.message || errorData.title || errorMessage);
                    } catch (jsonError) {
                        errorMessage = `Грешка: ${response.status} ${response.statusText}. Невалиден отговор от сървъра.`;
                        console.error('Failed to parse error response as JSON:', jsonError);
                    }
                    convertedCodeOutput.value = '';
                    showConversionMessage(errorMessage, 'danger');
                }
            } catch (error) {
                console.error('Fetch error:', error);
                convertedCodeOutput.value = '';
                showConversionMessage(`Възникна мрежова грешка: ${error.message}.`, 'danger');
            } finally {
                document.getElementById('convertCodeButton').disabled = false;
            }
        });
    </script>
}
